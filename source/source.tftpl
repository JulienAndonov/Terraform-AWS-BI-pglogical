/* Setup */
\c ${database_name}
create extension pglogical;
select pglogical.drop_node('provider', true);

/* Create node */
select pglogical.create_node(node_name := 'provider', dsn := 'host=${source_endpoint} port=5432 user=${database_admin_username} dbname=${database_name} password=${database_admin_password}');

/* BI Setup */
select pglogical.create_replication_set(set_name := 'a2a_transfers');
select pglogical.create_replication_set(set_name := 'account_service');
select pglogical.create_replication_set(set_name := 'bank_transfer_service');
select pglogical.create_replication_set(set_name := 'card_service');
select pglogical.create_replication_set(set_name := 'tenant_service');


select pglogical.replication_set_add_table(set_name := 'a2a_transfers', relation := 'a2a_transfers.a2a_transfer_instruments', synchronize_data := true, columns := '{id,a2a_transfer_holder_id,inserted_at,tenant_id,tenant_path,definition_id,external_reference,account_id}');
select pglogical.replication_set_add_table(set_name := 'a2a_transfers', relation := 'a2a_transfers.a2a_transfer_payments', synchronize_data := true, columns := '{id,sender_id,recipient_id,amount,currency,description,external_reference,inserted_at}');

select pglogical.replication_set_add_table(set_name := 'account_service', relation := 'account_service.account_holders', synchronize_data := true, columns := '{id,tenant_id,tenant_path,identities,account_holder_name,inserted_at,external_reference}');
select pglogical.replication_set_add_table(set_name := 'account_service', relation := 'account_service.accounts', synchronize_data := true, columns := '{id,tenant_id,tenant_path,account_holder_id,currency,external_reference,inserted_at,definition_id}');
select pglogical.replication_set_add_table(set_name := 'account_service', relation := 'account_service.technical_accounts', synchronize_data := true, columns := '{id,account_id,kind,vendor}');
select pglogical.replication_set_add_table(set_name := 'account_service', relation := 'account_service.transactions', synchronize_data := true, columns := '{id,technical_account_id,account_vendor,account_vendor_transaction_id,technical_description,amount,balance_after,account_currency,reference_transaction_id,kind,initiated_at,value_dated_at,inserted_at,instrument_id,serial_id}');
select pglogical.replication_set_add_table(set_name := 'account_service', relation := 'account_service.accounts_status_history', synchronize_data := true, columns := '{id,account_id,status,internal_status,inserted_at}');
select pglogical.replication_set_add_table(set_name := 'account_service', relation := 'account_service.technical_accounts_debit_hold_balance_history', synchronize_data := true, columns := '{id,technical_account_id,amount,currency,inserted_at}');

select pglogical.replication_set_add_table(set_name := 'bank_transfer_service', relation := 'bank_transfer_service.bank_transfer_holders', synchronize_data := true, columns := '{id,identities,inserted_at,tenant_id,tenant_path,external_reference}');
select pglogical.replication_set_add_table(set_name := 'bank_transfer_service', relation := 'bank_transfer_service.bank_transfer_instrument', synchronize_data := true, columns := '{id,account_id,vendor,vendor_reference_id,bank_transfer_holder_id,definition_id,external_reference,tenant_id,tenant_path,inserted_at}');
select pglogical.replication_set_add_table(set_name := 'bank_transfer_service', relation := 'bank_transfer_service.transactions', synchronize_data := true, columns := '{id,payment_system,vendor,vendor_transaction_id,bank_transfer_instrument_id,executed_at,initiated_at,amount,currency,inserted_at,payment_instance_id,reversal_of}');
select pglogical.replication_set_add_table(set_name := 'bank_transfer_service', relation := 'bank_transfer_service.bank_transfer_holders_label_history', synchronize_data := true, columns := '{id,bank_transfer_holder_id,inserted_at}');

select pglogical.replication_set_add_table(set_name := 'card_service', relation := 'card_service.authorizations', synchronize_data := true, columns := '{id,card_id,is_refund,channel,vendor,initiated_at,acquirer_id,merchant_id,merchant_name,merchant_address,merchant_city,merchant_state,merchant_country,mcc,inserted_at,wallet_token_id}');
select pglogical.replication_set_add_table(set_name := 'card_service', relation := 'card_service.cards', synchronize_data := true, columns := '{id,account_id,card_holder_id,product_def_root_id,external_reference,initial_card_id,replaces_card_id,first_four_digits,last_four_digits,name_on_card,expiration_timestamp,card_type,vendor,network,currency,inserted_at,tenant_id,tenant_path,created_at,line_2,line_3,replacement_reason}');
select pglogical.replication_set_add_table(set_name := 'card_service', relation := 'card_service.cards_marqeta', synchronize_data := true, columns := '{id,card_token,user_token,business_token,product_token,masked_pan,instrument_type,marqeta_created_at,inserted_at,card_holder_marqeta_id}');
select pglogical.replication_set_add_table(set_name := 'card_service', relation := 'card_service.cards_status_low_history', synchronize_data := true, columns := '{id,card_id,status_low,inserted_at,event_at}');
select pglogical.replication_set_add_table(set_name := 'card_service', relation := 'card_service.clearings', synchronize_data := true, columns := '{id,initial_authorization_id,vendor_event_id,card_id,used_3d_secure_authentication,channel,kind,vendor,bill_amount,cash_back_amount,transaction_amount,bill_currency,transaction_currency,network_reference_id,merchant_id,merchant_name,merchant_address,merchant_city,merchant_state,merchant_country,mcc,initiated_at,processed_at,interchange_fee_amount,acquirer_fee_amount,acquirer_id,acquirer_reference_number,acquirer_system_trace_audit_number,batch_number,inserted_at,currency_conversion_rate,cross_border_issuer_fee_amount}');
select pglogical.replication_set_add_table(set_name := 'card_service', relation := 'card_service.velocity_controls', synchronize_data := true, columns := '{id,target_kind,target_id,scope,tenant_id,tenant_path,inserted_at}');
select pglogical.replication_set_add_table(set_name := 'card_service', relation := 'card_service.cards_marqeta_status_history', synchronize_data := true, columns := '{id,card_marqeta_id,inserted_at,event_id,status,event_at}');
select pglogical.replication_set_add_table(set_name := 'card_service', relation := 'card_service.velocity_controls_window_history', synchronize_data := true, columns := '{id,velocity_control_id,window_kind,window_interval,amount,amount_currency,start_dt,end_dt,inserted_at}');

select pglogical.replication_set_add_table(set_name := 'tenant_service', relation := 'tenant_service.tenants', synchronize_data := true, columns := '{id,path,inserted_at}');
select pglogical.replication_set_add_table(set_name := 'tenant_service', relation := 'tenant_service.tenants_label_history', synchronize_data := true, columns := '{id,tenant_id,inserted_at}');